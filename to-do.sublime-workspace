{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"inline",
				"inline-block"
			],
			[
				"remove",
				"removeTask"
			],
			[
				"cl",
				"closest"
			],
			[
				"addevet",
				"addEventListener"
			],
			[
				"rem",
				"rembutton"
			],
			[
				"gete",
				"getElementsByClassName"
			],
			[
				"getEle",
				"getElementsByClassName"
			],
			[
				"addEve",
				"addEventListener"
			],
			[
				"clos",
				"closest"
			],
			[
				"addeve",
				"addEventListener"
			],
			[
				"addl",
				"addListItem"
			],
			[
				"BUTTON",
				"HTMLButtonElement"
			],
			[
				"save",
				"saveTasks"
			],
			[
				"find",
				"findIndex"
			],
			[
				"getE",
				"getElementById"
			],
			[
				"addEvent",
				"addEventListener"
			],
			[
				"append",
				"appendChild"
			],
			[
				"appe",
				"appendChild"
			],
			[
				"Typ",
				"type"
			],
			[
				"appen",
				"appendChild"
			],
			[
				"fucn",
				"function"
			],
			[
				"node",
				"\"NodeNext\""
			],
			[
				"log",
				">log\tconsole.log()"
			],
			[
				"conne",
				"connection"
			],
			[
				"border-left",
				"border-left-color"
			],
			[
				"border-right",
				"border-right-color"
			],
			[
				"border-bottom",
				"border-bottom-color"
			],
			[
				"eas",
				"ease-in-out"
			],
			[
				"player",
				"playerChoice"
			],
			[
				"comp",
				"computerChoice"
			],
			[
				"plae",
				"playerChoice"
			],
			[
				"for",
				"fore\tfor (each)"
			],
			[
				"p",
				"printf\tprintf …"
			],
			[
				"f",
				"for\tFor Loop"
			],
			[
				"cou",
				"count_ordered_subsets"
			],
			[
				"first",
				"firstValue"
			],
			[
				"d",
				"display"
			],
			[
				"dep",
				"dependencyManagement"
			],
			[
				"TEXT",
				"TEXT"
			],
			[
				"ACTIONEVENT",
				"ACTIONEVENT"
			],
			[
				"FXML",
				"FXML"
			],
			[
				"GRID",
				"GRIDPANE"
			],
			[
				"TEXTFIELD",
				"TEXTFIELD"
			],
			[
				"LABEL",
				"LABEL"
			],
			[
				"COLOR",
				"COLOR_"
			],
			[
				"FONT",
				"FONT"
			],
			[
				"GROUP",
				"GROUP"
			],
			[
				"setSc",
				"setScene()"
			],
			[
				"RECTANGLE",
				"RECTANGLE"
			],
			[
				"pu",
				"public"
			],
			[
				"SHAPE",
				"SHAPE"
			],
			[
				"back",
				"background-image"
			],
			[
				"backgr",
				"background-size"
			],
			[
				"bak",
				"background-image"
			],
			[
				"sp",
				"space-between"
			],
			[
				"border",
				"border"
			],
			[
				"spac",
				"space-between"
			],
			[
				"flex",
				"flex-start"
			],
			[
				"fle",
				"flex-start"
			],
			[
				"bo",
				"border"
			],
			[
				"text",
				"text-align"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"b",
				"border"
			],
			[
				"font",
				"font-family"
			],
			[
				"fon",
				"font-family"
			],
			[
				"audi",
				"audio_player"
			],
			[
				"al",
				"vertical-align"
			],
			[
				"a",
				"align-content"
			],
			[
				"inl",
				"inline-block"
			],
			[
				"fig",
				"figcaption"
			],
			[
				"VB",
				"VBOX"
			],
			[
				"MOVETO",
				"MOVETO"
			],
			[
				"PATH",
				"PATH"
			],
			[
				"STAGEST",
				"STAGESTYLE"
			],
			[
				"APPLICATION",
				"APPLICATION"
			],
			[
				"BUTTOn",
				"BUTTON"
			],
			[
				"label",
				"LABEL"
			],
			[
				"INTEGERPROPER",
				"INTEGERPROPERTY"
			],
			[
				"IntegerP",
				"INTEGERPROPERTY"
			],
			[
				"EVENT",
				"EVENT"
			],
			[
				"setTranslate",
				"setTranslateY()"
			],
			[
				"setTran",
				"setTranslateX()"
			],
			[
				"file",
				"fileInput"
			],
			[
				"ge",
				"getElementById"
			],
			[
				"get",
				"getElementById"
			],
			[
				"par",
				"parseFloat"
			],
			[
				"hand",
				"handleEquals"
			],
			[
				"han",
				"handlePercentage"
			],
			[
				"value",
				"value2"
			],
			[
				"ha",
				"function handleDot"
			],
			[
				"animation",
				"animation-play-state"
			],
			[
				"animation-",
				"animation-play-state"
			],
			[
				"fsiz",
				"font-size"
			],
			[
				"equa",
				"equalsPressed"
			],
			[
				"equ",
				"equalsPressed"
			],
			[
				"st",
				"storedValue"
			],
			[
				"valu",
				"value1"
			],
			[
				"bor",
				"border-radius"
			],
			[
				"clear",
				"clearForm"
			],
			[
				"clea",
				"clearButton"
			],
			[
				"onk",
				"onkeypress"
			],
			[
				"SCANNER",
				"SCANNER"
			],
			[
				"ad",
				"adjacency_list"
			],
			[
				"inr",
				"inorder"
			],
			[
				"fre",
				"freeStack"
			],
			[
				"str",
				"string.h"
			],
			[
				"pri",
				"printf\tprintf …"
			],
			[
				"fo",
				"for\tFor Loop"
			],
			[
				"inc",
				"Inc\t#include <…>"
			],
			[
				"set",
				"setVisible"
			],
			[
				"Swing",
				"SWINGCONSTANTS"
			],
			[
				"Scanner",
				"SCANNER"
			],
			[
				"thr",
				"throws"
			],
			[
				"wile",
				"while"
			],
			[
				"Fil",
				"FileWriter"
			],
			[
				"IoEx",
				"IOEXCEPTION"
			],
			[
				"is",
				"isEmpty"
			],
			[
				"I",
				"Input"
			],
			[
				"nextI",
				"nextInt()"
			],
			[
				"Scanne",
				"SCANNER"
			],
			[
				"create",
				"createWindow"
			],
			[
				"insert",
				"insertend"
			],
			[
				"inser",
				"insertmiddle"
			],
			[
				"SCANNE",
				"SCANNER"
			],
			[
				"IOE",
				"IOEXCEPTION"
			],
			[
				"PATTERN",
				"PATTERN"
			],
			[
				"toChar",
				"toCharArray()"
			],
			[
				"St",
				"StringBuilder"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#include <windows.h>\n\n\n// Declare the window procedure\nLRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam);\n\nint main() {\n    // Register the window class\n    const char CLASS_NAME[] = \"SimpleWindowClass\";\n\n    WNDCLASS wc = {};\n    wc.lpfnWndProc = WindowProc;\n    wc.hInstance = GetModuleHandle(NULL);\n    wc.lpszClassName = CLASS_NAME;\n\n    RegisterClass(&wc);\n\n    // Create the window\n    HWND hwnd = CreateWindowEx(\n        0,                          // Optional window styles\n        CLASS_NAME,                 // Window class\n        \"Simple Window\",            // Window title\n        WS_OVERLAPPEDWINDOW,        // Window style\n\n        // Size and position\n        CW_USEDEFAULT, CW_USEDEFAULT, 640, 480,\n\n        NULL,       // Parent window\n        NULL,       // Menu\n        GetModuleHandle(NULL),      // Instance handle\n        NULL        // Additional application data\n    );\n\n    if (hwnd == NULL) {\n        return 0;\n    }\n\n    // Display the window\n    ShowWindow(hwnd, SW_SHOWNORMAL);\n\n    // Run the message loop\n    MSG msg = {};\n    while (GetMessage(&msg, NULL, 0, 0)) {\n        TranslateMessage(&msg);\n        DispatchMessage(&msg);\n    }\n\n    return 0;\n}\n\n// Window procedure\nLRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {\n    switch (uMsg) {\n        case WM_DESTROY:\n            PostQuitMessage(0);\n            return 0;\n\n        case WM_CLOSE:\n            DestroyWindow(hwnd);\n            return 0;\n\n        case WM_PAINT:\n        {\n            PAINTSTRUCT ps;\n            HDC hdc = BeginPaint(hwnd, &ps);\n\n            // All painting occurs here, between BeginPaint and EndPaint.\n\n            FillRect(hdc, &ps.rcPaint, (HBRUSH) (COLOR_WINDOW+1));\n\n            EndPaint(hwnd, &ps);\n        }\n        return 0;\n        \n        default:\n            return DefWindowProc(hwnd, uMsg, wParam, lParam);\n    }\n}\n",
			"file": "/C/Users/admin/Desktop/Programming_Practice/Cpractice/game.c",
			"file_size": 1979,
			"file_write_time": 133516279828457531,
			"settings":
			{
				"buffer_size": 1903,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line.sublime-macro"
					},
					"AQAAABQAAAAAAAAAFQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++ & C Single File Builder - Minghang Yang/C Builder-Minghang Yang.sublime-build",
					""
				],
				[
					"Packages/C++ & C Single File Builder - Minghang Yang/C Builder-Minghang Yang.sublime-build",
					"Run"
				],
				[
					"Packages/C++ & C Single File Builder - Minghang Yang/C Builder-Minghang Yang.sublime-build",
					"Build and Run"
				]
			],
			[
				"Packages/C++ & C Single File Builder - Minghang Yang/C Builder-Minghang Yang.sublime-build",
				"Build and Run"
			]
		],
		[
			[
				[
					"Packages/C++ & C Single File Builder - Minghang Yang/C++ Builder-Minghang Yang.sublime-build",
					""
				],
				[
					"Packages/C++ & C Single File Builder - Minghang Yang/C++ Builder-Minghang Yang.sublime-build",
					"Run"
				],
				[
					"Packages/C++ & C Single File Builder - Minghang Yang/C++ Builder-Minghang Yang.sublime-build",
					"Build and Run"
				]
			],
			[
				"Packages/C++ & C Single File Builder - Minghang Yang/C++ Builder-Minghang Yang.sublime-build",
				"Build and Run"
			]
		],
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Golang Build/Go.sublime-build",
					""
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Run"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Test"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Install"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Cross-Compile (Interactive)"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Golang Build/Go.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/Java.sublime-build",
					""
				],
				[
					"Packages/User/Java.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/Java.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"project",
				"Project: Edit Project"
			],
			[
				"clang",
				"Preferences: LSP-clangd Settings"
			],
			[
				"clangd",
				"Preferences: LSP-clangd Settings"
			],
			[
				"enable la",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp-",
				"Preferences: LSP-typescript Settings"
			],
			[
				"lsp-json",
				"Preferences: LSP-json Settings"
			],
			[
				"lsp-typ",
				"Preferences: LSP-typescript Settings"
			],
			[
				"lsp-jd",
				"Preferences: LSP-jdtls Settings"
			],
			[
				"lsp-c",
				"Preferences: LSP-clangd Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"lsp ",
				"Preferences: LSP Key Bindings"
			],
			[
				"type",
				"Set Syntax: TypeScript"
			],
			[
				"tailwind",
				"Preferences: LSP-tailwindcss Settings"
			],
			[
				"isntal",
				"Package Control: Install Package"
			],
			[
				"LSP: :w",
				"LSP: Dump Window Configs"
			],
			[
				"fast",
				"FastOlympicCoding: Run"
			],
			[
				"markd",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"live",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"previ",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"neovintag",
				"NeoVintageous: Open .neovintageousrc File"
			],
			[
				"markdown live",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"markdown li",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"mark",
				"Markdown HTML Preview"
			],
			[
				"mar",
				"Markdown HTML Preview"
			],
			[
				"htmlpre",
				"Markdown HTML Preview"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"neovin",
				"NeoVintageous: Reload .neovintageousrc File"
			],
			[
				"vim",
				"ActualVim: Disable (File)"
			],
			[
				"actual",
				"ActualVim: Disable (File)"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"jspre",
				"JsPrettier: Format Code"
			],
			[
				"neovintageous",
				"NeoVintageous: Open .neovintageousrc File"
			],
			[
				"vin",
				"Preferences: NeoVintageous Settings"
			],
			[
				"emmet",
				"Preferences: Emmet Key Bindings"
			],
			[
				"boiler",
				"Snippet: htmlboiler"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Snippet: cp",
				"Snippet: cp"
			],
			[
				"origami ke",
				"Preferences: Origami Key Bindings"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"LSP: ",
				"LSP: Enable Language Server in Project"
			],
			[
				"lsp",
				"Preferences: LSP Key Bindings"
			],
			[
				"sideba",
				"View: Toggle Side Bar"
			],
			[
				"side",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"terminus ",
				"Terminus: List Shells"
			],
			[
				"preview",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"new ",
				"ANF: New File"
			],
			[
				"terminus l",
				"Terminus: List Shells"
			],
			[
				"file n",
				"File Navigator: Open"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"sidebar",
				"View: Toggle Side Bar"
			],
			[
				"packg",
				"Package Control: Install Package"
			],
			[
				"tem",
				"Terminus: List Shells"
			],
			[
				"teminus l",
				"Terminus: List Shells"
			],
			[
				"m",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"terminus li",
				"Terminus: List Shells"
			],
			[
				"terminusl",
				"Terminus: List Shells"
			],
			[
				"javascript",
				"Set Syntax: JavaScript"
			],
			[
				"html liv",
				"Markdown HTML Preview"
			],
			[
				"terminus lis",
				"Terminus: List Shells"
			],
			[
				"Snippet: html",
				"Snippet: htmlboiler"
			],
			[
				"INSTAL",
				"Package Control: Install Package"
			],
			[
				"HTML",
				"Set Syntax: HTML"
			],
			[
				"terminus list",
				"Terminus: List Shells"
			],
			[
				"ctrl",
				"NeoVintageous: Toggle CTRL keys"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"mard",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"vintaeous set",
				"Preferences: NeoVintageous Settings"
			],
			[
				"syntax c",
				"Set Syntax: C"
			],
			[
				"sublimea",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"terminus shell",
				"Terminus: List Shells"
			],
			[
				"terminus",
				"Preferences: Terminus Settings"
			],
			[
				"package control install",
				"Package Control: Install Package"
			],
			[
				"Package control",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"javac",
			"print(\"hello world\")",
			"print(hello world)",
			"print hello world",
			"print",
			"exit",
			"exit()",
			"ls",
			"cls",
			"dir",
			"cd",
			"make clean"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/admin/Desktop/to-do"
	],
	"file_history":
	[
		"/C/Users/admin/Desktop/to-do/to-do-app.sublime-project",
		"/C/Users/admin/Desktop/to-do/webpack.config.js",
		"/C/Users/admin/Desktop/to-do/tsconfig.json",
		"/C/Users/admin/Desktop/to-do/package.json",
		"/C/Users/admin/Desktop/to-do/src/style.css",
		"/C/Users/admin/Desktop/to-do/src/print.ts",
		"/C/Users/admin/Desktop/to-do/src/index.ts",
		"/C/Users/admin/Desktop/to-do/node_modules/@types/node/stream.d.ts",
		"/C/Users/admin/Desktop/pomodoro/src/test/java/app/pomodoro/pomodoroTest.java",
		"/C/Users/admin/Desktop/pomodoro/src/main/resources/app/pomodoro/hello.fxml",
		"/C/Users/admin/Desktop/pomodoro/pom.xml",
		"/C/Users/admin/Desktop/pomodoro/src/main/java/app/pomodoro/Main.java",
		"/C/Users/admin/Desktop/to-do/dist/index.html",
		"/C/Users/admin/Desktop/to-do/src/.gitignore",
		"/C/Users/admin/Desktop/to-do/node_modules/typescript/lib/lib.es2015.core.d.ts",
		"/C/Users/admin/Desktop/to-do/src/print.js",
		"/C/Users/admin/Desktop/to-do/dist/main.js",
		"/C/Users/admin/Desktop/to-do/index.html",
		"/C/Users/admin/Desktop/test.java",
		"/C/Users/admin/Desktop/test.c",
		"/C/Users/admin/Desktop/to-do/to-do-app/.next/types/app/page.ts",
		"/C/Users/admin/Desktop/to-do/to-do-app/.next/types/app/layout.ts",
		"/C/Users/admin/Desktop/to-do/to-do-app/src/app/layout.tsx",
		"/C/Users/admin/Desktop/to-do/to-do-app/src/app/globals.css",
		"/C/Users/admin/Desktop/to-do/to-do-app/tsconfig.json",
		"/C/Users/admin/Desktop/to-do/to-do-app/.next/static/css/app/layout.css",
		"/C/Users/admin/Desktop/to-do/to-do-app/src/app/page.tsx",
		"/C/Users/admin/Desktop/to-do/to-do-app/.next/server/app/index.html",
		"/C/Users/admin/Desktop/to-do/to-do-app/package.json",
		"/C/Users/admin/Desktop/to-do/to-do-app/src/app/index.ts",
		"/C/Users/admin/Desktop/to-do/to-do-app/src/app/ui.js",
		"/F/Programs/Nodejs/node_modules/npm/package.json",
		"/C/Users/admin/Desktop/pro/src/main/java/com/music_player/connect/connect.java",
		"/C/Users/admin/Desktop/pro/src/main/resources/com/music_player/index.html",
		"/C/Users/admin/Desktop/pro/src/main/resources/com/music_player/style.css",
		"/C/Users/admin/Desktop/pro/src/main/resources/com/music_player/login_form/login.html",
		"/C/Users/admin/Desktop/pro/src/main/resources/com/music_player/login.html",
		"/C/Users/admin/Desktop/pro/src/main/resources/com/music_player/chess_boards.svg",
		"/C/Users/admin/Desktop/Programming_Practice/DSA/algos.c",
		"/C/Users/admin/Desktop/graphics/main.c",
		"/C/Users/admin/Desktop/Programming_Practice/Cpractice/game.c",
		"/C/Users/admin/Desktop/pro/pom.xml",
		"/C/Users/admin/Desktop/Programming_Practice/reactpractice/hypertext/script.js",
		"/C/Users/admin/Desktop/Programming_Practice/reactpractice/hypertext/index.html",
		"/C/Users/admin/Desktop/Programming_Practice/reactpractice/hypertext/style.css",
		"/C/Users/admin/Desktop/pro/src/main/java/com/music_player/connect/script.js",
		"/C/Users/admin/Desktop/pro/src/main/java/com/music_player/connect/style.css",
		"/C/Users/admin/Desktop/odin1/style.css",
		"/C/Users/admin/Desktop/odin1/index.html",
		"/C/Users/admin/Desktop/odin1/script.js",
		"/C/Users/admin/odin/odinpractice/script.js",
		"/C/Users/admin/odin/odinpractice/index.html",
		"/C/Users/admin/Desktop/Programming_Practice/Cpractice/makefile",
		"/C/Users/admin/Desktop/Programming_Practice/pypractice/list.py",
		"/C/Users/admin/Desktop/Programming_Practice/Cpractice/subset.c",
		"/C/Users/admin/Desktop/Programming_Practice/DSA/subset.java",
		"/C/Users/admin/Desktop/Programming_Practice/DSA/plusOne.java",
		"/C/Users/admin/Desktop/pro/src/main/java/com/music_player/connect.java",
		"/C/Users/admin/Desktop/pro/musicPlayer/pom.xml",
		"/C/Users/admin/Desktop/pro/musicPlayer/src/test/java/com/AppTest.java",
		"/C/Users/admin/Desktop/pro/musicPlayer/src/main/java/com/connect.java",
		"/C/Users/admin/Desktop/pro/musicPlayer/src/main/java/com/App.java",
		"/C/Users/admin/Desktop/New_folder/connect.java",
		"/C/Users/admin/Desktop/New_folder/pom.xml",
		"/C/Users/admin/Desktop/Programming_Practice/Cpractice/pyramid.c",
		"/C/Users/admin/Desktop/Programming_Practice/Cpractice/mergeLists.c",
		"/C/Users/admin/Desktop/6.006-spring-2020/content_map.json",
		"/E/Php/README.md",
		"/C/Users/admin/Desktop/project-based-learning/README.md",
		"/C/Users/admin/Desktop/Programming_Practice/reactpractice/learning-app/package.json",
		"/C/Users/admin/Desktop/Programming_Practice/reactpractice/learning-app/package-lock.json",
		"/C/Users/admin/Desktop/build-your-own-x/README.md",
		"/C/Users/admin/Desktop/project/site/index.html",
		"/C/Users/admin/Desktop/Programming_Practice/Cpractice/makefile.mk",
		"/F/Books/makefile",
		"/C/Users/admin/AppData/Roaming/Sublime Text/Packages/User/.neovintageousrc",
		"/C/Users/admin/Desktop/pomodoro/src/main/java/app/pomodoro/hello.fxml",
		"/C/Users/admin/Desktop/pomodoro/src/main/java/Main.java",
		"/C/Users/admin/Desktop/pomodoro/Main.java",
		"/C/Users/admin/Desktop/New_folder/index.html",
		"/C/Users/admin/Desktop/New_folder/style.css",
		"/C/Users/admin/Desktop/index.html",
		"/C/Users/admin/Desktop/style.css",
		"/C/Users/admin/odin/css-exercises/flex/04-flex-information/README.md",
		"/C/Users/admin/odin/css-exercises/flex/04-flex-information/style.css",
		"/C/Users/admin/odin/css-exercises/flex/04-flex-information/index.html",
		"/C/Users/admin/odin/css-exercises/flex/03-flex-header-2/README.md",
		"/C/Users/admin/odin/css-exercises/flex/03-flex-header-2/style.css",
		"/C/Users/admin/odin/css-exercises/flex/03-flex-header-2/index.html",
		"/C/Users/admin/odin/css-exercises/flex/02-flex-header/index.html",
		"/C/Users/admin/odin/css-exercises/flex/02-flex-header/style.css",
		"/C/Users/admin/odin/css-exercises/flex/02-flex-header/README.md",
		"/C/Users/admin/odin/css-exercises/flex/02-flex-header/solution/solution.css",
		"/C/Users/admin/odin/css-exercises/flex/01-flex-center/solution/solution.css",
		"/c/users/admin/odin/css-exercises/flex/02-flex-header/style.css",
		"/C/Users/admin/odin/css-exercises/flex/01-flex-center/index.html",
		"/C/Users/admin/odin/css-exercises/flex/01-flex-center/style.css",
		"/C/Users/admin/odin/css-exercises/flex/01-flex-center/README.md",
		"/C/Users/admin/Desktop/Coding/practice/index.html",
		"/C/Users/admin/Desktop/Coding/practice/style.css",
		"/C/Users/admin/odin/css-exercises/foundations/06-cascade-fix/index.html",
		"/C/Users/admin/odin/css-exercises/foundations/06-cascade-fix/style.css",
		"/C/Users/admin/odin/css-exercises/foundations/06-cascade-fix/README.md",
		"/C/Users/admin/odin/css-exercises/foundations/05-descendant-combinator/index.html",
		"/C/Users/admin/odin/css-exercises/foundations/05-descendant-combinator/style.css",
		"/C/Users/admin/odin/css-exercises/foundations/04-chaining-selectors/style.css",
		"/C/Users/admin/odin/css-exercises/foundations/04-chaining-selectors/index.html",
		"/C/Users/admin/odin/css-exercises/foundations/05-descendant-combinator/README.md",
		"/C/Users/admin/Desktop/Coding/practice/index1.html",
		"/C/Users/admin/odin/css-exercises/foundations/02-class-id-selectors/README.md",
		"/C/Users/admin/odin/css-exercises/foundations/01-css-methods/README.md",
		"/C/Users/admin/odin/css-exercises/foundations/01-css-methods/index.html",
		"/C/Users/admin/odinpractice/index.html",
		"/C/Users/admin/odinpractice/recipes/lasagna.html",
		"/C/Users/admin/odinpractice/recipes/index.html",
		"/C/Users/admin/Desktop/chess/index.html",
		"/C/Users/admin/Desktop/chess/script.js",
		"/C/Users/admin/Desktop/New_folder/text.php",
		"/C/Users/admin/Desktop/New folder/index.html",
		"/C/Users/admin/Desktop/New folder/text.php",
		"/C/Users/admin/Desktop/music/styles/style1.css",
		"/C/Users/admin/Desktop/music/styles/style.css",
		"/C/Users/admin/Desktop/music/script/scripts.js",
		"/C/Users/admin/Desktop/music/script/script.js",
		"/C/Users/admin/Desktop/music/site/index.html",
		"/C/Users/admin/Desktop/music/site/index1.html",
		"/C/Users/admin/Desktop/New folder/script.js",
		"/C/Users/admin/Desktop/pomodoro/Hello.java"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"source",
			"noemit",
			"emitdeclarationonly",
			"noemit",
			"\";",
			"scripts",
			"react",
			"react-scripts",
			"dependencies",
			"dev"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/admin/Desktop/Programming_Practice/Cpractice/game.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1903,
						"regions":
						{
						},
						"selection":
						[
							[
								782,
								782
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".<>:\"/*",
									"selector": "punctuation.accessor | (meta.preprocessor.include string - punctuation.definition.string.end)",
									"server": "clangd"
								}
							],
							"copilot.completion._is_modified": false,
							"copilot.completion.is_visible": false,
							"copilot.completion.is_visible_panel_completions": false,
							"copilot.completion.is_waiting_completion": false,
							"copilot.completion.is_waiting_panel_completions": false,
							"copilot.completion.original_layout": null,
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///C:/Users/admin/Desktop/Programming_Practice/Cpractice/game.c",
							"show_definitions": false,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Command-line":
	{
		"height": 126.0
	},
	"output.LSP Log Panel":
	{
		"height": 138.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 31.0
	},
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 33.0
	},
	"output.exec":
	{
		"height": 295.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.golang_build":
	{
		"height": 190.0
	},
	"output.gotools_syntax_errors":
	{
		"height": 126.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.mdpopups-dummy":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Golang Build/Go.sublime-build",
	"project": "to-do-app.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"_vintageous_last_char_search_character": "d",
		"_vintageous_last_char_search_command": "vi_f",
		"_vintageous_reset_during_init": true,
		"lsp_show_code_lens": false,
		"lsp_show_inlay_hints": true
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 50.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
